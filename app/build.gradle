apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    //签名文件配置
    signingConfigs {
        config1 {
            keyAlias 'hzzt'
            keyPassword 'hzzt.123'
            storeFile file('hzzt.123.jks')
            storePassword 'hzzt.123'
        }
    }

    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        // 若集成过多第三方库时可能导致方法超过65536时需要开启
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            zipAlignEnabled true   // Zipalign优化
        //    shrinkResources true   // 移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config1
        }
        debug {
            minifyEnabled false
            zipAlignEnabled true   // Zipalign优化
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config1
        }
    }
    dataBinding {
        enabled = true
    }

    compileOptions {
        targetCompatibility = JavaVersion.VERSION_1_8
        sourceCompatibility = JavaVersion.VERSION_1_8
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    repositories {
        flatDir {
            dirs '../libs' //this way we can find the .aar file in libs folder
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            aidl.srcDirs = ['src/main/java']
        }
    }

    //命名打包
    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                outputFileName = "PowerfulState_v${variant.versionName}_${customTime()}.apk"
            }
    }
}
//自定义时间
def customTime() {
    return new Date().format("MM-dd", TimeZone.getTimeZone("GMT+08:00"))
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':common')
}
